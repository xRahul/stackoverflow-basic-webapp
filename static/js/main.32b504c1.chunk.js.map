{"version":3,"sources":["components/SearchTagComponent.js","actions/search.js","containers/SearchTag.js","components/QuestionDetails.js","components/Loader.js","components/QuestionList.js","containers/Questions.js","components/FilterTagComponent.js","actions/filter.js","actions/question.js","containers/QuestionsFilterTag.js","components/HomePage.js","components/AnswerDetails.js","components/AnswerList.js","containers/AnswersFilterTag.js","components/QuestionPage.js","containers/QuestionPageContainer.js","store/reducers/index.js","store/reducers/questions.js","store/reducers/question.js","serviceWorker.js","index.js","store/store.js"],"names":["SearchTagComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchInput","urlTagName","_handleKeyDown","bind","assertThisInitialized","_handleChange","e","key","preventDefault","fetchQuestions","history","push","target","value","react_default","a","createElement","Fragment","hasError","Form","Text","className","errorMessage","Group","controlId","Label","Control","type","placeholder","defaultValue","onKeyDown","onChange","undefined","availableQuota","totalQuota","React","Component","GET_QUESTIONS_BY_TAG","RECEIVE_QUESTIONS_BY_TAG","ERROR_RECEIVING_QUESTIONS_BY_TAG","errorReceivingQuestionsByTag","tag","UPDATE_SEARCH_VALUE_ON_HOME_PAGE","fetchQuestionsByTag","dispatch","getQuestionsByTag","fetch","concat","then","response","json","error_message","questions","receivedAt","Date","now","receiveQuestionsByTag","catch","SearchTag","withRouter","connect","state","ownProps","tagName","searchValue","questionsByTag","hasOwnProperty","questionsByTags","currentTag","quota_remaining","quota_max","updateSearchValue","QuestionDetails","markUp","__html","truncateBody","createMarkup","body","substring","titleAsHeader","titleHasLink","react_router_dom","to","process","questionId","Card","Title","dangerouslySetInnerHTML","title","Header","tags","map","Badge","pill","variant","style","marginRight","marginBottom","titleInHeader","Body","titleInBody","setBody","href","link","textDecoration","listTags","Loader","LoadingOverlay_default","active","spinner","PacmanLoader_default","color","QuestionList","listItems","filter","question","filterBy","indexOf","QuestionDetails_QuestionDetails","question_id","length","isFetching","Loader_Loader","marginTop","Questions","items","FilterTagComponent","filterList","showFilterTag","filterType","FILTER_QUESTIONS_BY_STRING","FILTER_ANSWERS_BY_STRING","GET_QUESTION_DETAILS","RECEIVE_QUESTION_DETAILS","ERROR_RECEIVING_QUESTION_DETAILS","errorReceivingQuestionDetails","fetchQuestionDetails","getQuestionDetails","questionDetails","receiveQuestionDetails","QuestionsFilterTag","searchString","filterQuestionsByString","HomePage","_ref","match","params","Container","containers_SearchTag","containers_QuestionsFilterTag","containers_Questions","AnswerDetails","AnswerList","answers","answer","AnswerDetails_AnswerDetails","answer_id","answerId","AnswersFilterTag","questionsById","questionsByIds","filterAnswersByString","QuestionPage","fetchQuestionData","isLoading","containers_AnswersFilterTag","AnswerList_AnswerList","QuestionPageContainer","rootReducer","combineReducers","arguments","assign","action","defineProperty","currentQuestionId","Boolean","window","location","hostname","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","basename","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32b504c1.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'react-bootstrap'\n\n\nexport default class SearchTagComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.searchInput = props.urlTagName\n    this._handleKeyDown = this._handleKeyDown.bind(this)\n    this._handleChange = this._handleChange.bind(this)\n  }\n\n  componentDidUpdate() {\n    if (this.props.urlTagName) {\n      this.searchInput = this.props.urlTagName\n    }\n  }\n\n  _handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault()\n      if (this.searchInput) {\n        this.props.fetchQuestions(this.searchInput)\n        this.props.history.push('/' + this.searchInput)\n      }\n\n    }\n  }\n\n  _handleChange(e) {\n    this.searchInput = e.target.value;\n  }\n\n  render() {\n      return (\n        <>\n        {this.props.hasError &&\n          <Form.Text className=\"text-muted\">\n            {this.props.errorMessage}\n          </Form.Text>\n        }\n        {!this.props.hasError &&\n          <Form>\n            <Form.Group controlId=\"formSearchTagControlId\">\n              <Form.Label>Search Trending problems by tag:</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Tag name\"\n                defaultValue={this.searchInput}\n                onKeyDown={this._handleKeyDown}\n                onChange={this._handleChange}\n              />\n              <Form.Text className=\"text-muted\">\n                {this.props.availableQuota !== undefined &&\n                  \"Free Search Quota used: \"+ this.props.availableQuota +  \"/\" + this.props.totalQuota\n                }\n              </Form.Text>\n            </Form.Group>\n          </Form>\n        }\n        </>\n      );\n  }\n}\n\nSearchTagComponent.propTypes = {\n  fetchQuestions: PropTypes.func,\n  availableQuota: PropTypes.number,\n  totalQuota: PropTypes.number,\n  urlTagName: PropTypes.string,\n  history: PropTypes.object\n};","import fetch from 'cross-fetch'\n\nexport const GET_QUESTIONS_BY_TAG = 'GET_QUESTIONS_BY_TAG'\nfunction getQuestionsByTag(tag) {\n  return {\n    type: GET_QUESTIONS_BY_TAG,\n    tag\n  }\n}\n\nexport const RECEIVE_QUESTIONS_BY_TAG = 'RECEIVE_QUESTIONS_BY_TAG'\nfunction receiveQuestionsByTag(tag, json) {\n  return {\n    type: RECEIVE_QUESTIONS_BY_TAG,\n    tag,\n    questions: json,\n    receivedAt: Date.now()\n  }\n}\n\nexport const ERROR_RECEIVING_QUESTIONS_BY_TAG = 'ERROR_RECEIVING_QUESTIONS_BY_TAG'\nexport function errorReceivingQuestionsByTag(tag, errorMessage) {\n  return {\n    type: ERROR_RECEIVING_QUESTIONS_BY_TAG,\n    tag,\n    errorMessage\n  }\n}\n\nexport const UPDATE_SEARCH_VALUE_ON_HOME_PAGE = 'UPDATE_SEARCH_VALUE_ON_HOME_PAGE'\nexport function updateSearchValueOnHomePage(searchValue) {\n  return {\n    type: UPDATE_SEARCH_VALUE_ON_HOME_PAGE,\n    searchValue\n  }\n}\n\nexport const fetchQuestionsByTag = function (tag) {\n  return dispatch => {\n    dispatch(getQuestionsByTag(tag))\n    return fetch(`https://api.stackexchange.com/2.2/tags/${tag}/faq?site=stackoverflow&filter=!9Z(-wwYGT`)\n      .then(response => response.json())\n      .then(json => {\n        if ('error_id' in json) {\n          dispatch(errorReceivingQuestionsByTag(tag, json.error_message))\n        } else {\n          dispatch(receiveQuestionsByTag(tag, json))\n        }\n      })\n      .catch(() => dispatch(errorReceivingQuestionsByTag(tag)))\n  }\n}","import {\n  connect\n} from 'react-redux'\nimport SearchTagComponent from '../components/SearchTagComponent';\nimport {\n  fetchQuestionsByTag, updateSearchValueOnHomePage\n} from '../actions/search'\nimport { withRouter } from \"react-router\"\n\nconst mapStateToProps = (state, ownProps) => {\n  const urlTagName = ownProps.tagName\n  const searchValue = state.questionsByTag ? state.questionsByTag.searchValue : ''\n  var availableQuota, totalQuota\n  if (state.questionsByTag.hasOwnProperty('questionsByTags') &&\n    state.questionsByTag.questionsByTags.hasOwnProperty(state.questionsByTag.currentTag)) {\n    availableQuota = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].quota_remaining\n    totalQuota = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].quota_max\n  }\n\n  return {\n    availableQuota,\n    totalQuota,\n    urlTagName,\n    searchValue\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuestions: (tagName) => {\n      dispatch(fetchQuestionsByTag(tagName))\n    },\n    updateSearchValue: (value) => {\n      dispatch(updateSearchValueOnHomePage(value))\n    }\n  }\n}\n\n\nconst SearchTag = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchTagComponent))\n\nexport default SearchTag","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Badge } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\n\nexport default class QuestionDetails extends React.Component {\n\n  createMarkup(markUp) {\n    return {__html: markUp}\n  }\n\n  setBody() {\n    if (this.props.truncateBody) {\n      return this.createMarkup(this.props.body.substring(0, 200).concat('...'))\n    }\n    return this.createMarkup(this.props.body)\n  }\n\n  titleInBody() {\n    if (!this.props.titleAsHeader) {\n      if (this.props.titleHasLink) {\n        return (\n          <NavLink to={`${process.env.PUBLIC_URL}/question/` + this.props.questionId}>\n            <Card.Title\n              dangerouslySetInnerHTML={this.createMarkup(this.props.title)} />\n          </NavLink>\n        )\n      }\n      return (\n        <Card.Title\n          dangerouslySetInnerHTML={this.createMarkup(this.props.title)} />\n      )\n    } else return\n  }\n\n  titleInHeader() {\n    if (this.props.titleAsHeader) {\n      if (this.props.titleHasLink) {\n        return (\n          <NavLink to={`${process.env.PUBLIC_URL}/question/` + this.props.questionId}>\n            <Card.Header>\n              <Card.Title\n                dangerouslySetInnerHTML={this.createMarkup(this.props.title)} />\n            </Card.Header>\n          </NavLink>\n        )\n      }\n      return (\n        <Card.Header>\n          <Card.Title\n            dangerouslySetInnerHTML={this.createMarkup(this.props.title)} />\n        </Card.Header>\n      )\n    } else return\n  }\n\n  listTags() {\n    return this.props.tags.map((tag) => {\n      return (\n        <Badge key={tag} pill variant=\"secondary\" style={{ marginRight: 5 }}>{tag}</Badge>\n      )\n    })\n  }\n\n  render() {\n      return (\n        <Card style = {{marginBottom: 20}}>\n          {this.titleInHeader()}\n          <Card.Body>\n            {this.titleInBody()}\n            <Card.Text dangerouslySetInnerHTML={this.setBody()} />\n            <Card.Text >\n              <a href={this.props.link} target={'blank'} style={{ textDecoration: 'none' }}>\n                StackOverflow\n              </a>\n            </Card.Text>\n          </Card.Body>\n          <Card.Body>\n            {this.listTags()}\n          </Card.Body>\n        </Card>\n      )\n  }\n}\n\nQuestionDetails.propTypes = {\n  link: PropTypes.string,\n  title: PropTypes.string,\n  body: PropTypes.string,\n  truncateBody: PropTypes.bool,\n  titleHasLink: PropTypes.bool,\n  titleAsHeader: PropTypes.bool,\n  questionId: PropTypes.number,\n  tags: PropTypes.array\n}","import React from 'react'\nimport LoadingOverlay from 'react-loading-overlay'\nimport PacmanLoader from 'react-spinners/PacmanLoader'\n\nexport default class Loader extends React.Component {\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={true}\n        spinner={<PacmanLoader color={'#36D7B7'} />}\n      />\n    )\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap'\nimport QuestionDetails from './QuestionDetails'\nimport Loader from './Loader';\n\n\nexport default class QuestionList extends React.Component {\n\n  render() {\n    const questions = this.props.questions;\n    const listItems = questions ? questions.filter((question) => {\n      if (!this.props.filterBy) return true\n      return question.title.indexOf(this.props.filterBy) !== -1\n        || question.body.indexOf(this.props.filterBy) !== -1\n    }).map((question) =>\n      <QuestionDetails\n        key={question.question_id}\n        link={question.link}\n        title={question.title}\n        body={question.body}\n        truncateBody={true}\n        titleHasLink={true}\n        questionId={question.question_id}\n        tags={question.tags}\n      />\n    ) : []\n    return (\n      <>\n      {questions && questions.length === 0 &&\n        <Form.Text className=\"text-muted\">No questions found for the given Tag!</Form.Text>\n      }\n      {questions && questions.length !== 0 && listItems.length === 0 &&\n        <Form.Text className=\"text-muted\">No matching questions found!</Form.Text>\n      }\n      {questions && questions.length !== 0 && listItems.length > 0 &&\n        <Form.Text className=\"text-muted\">Found: {listItems.length} matches</Form.Text>\n      }\n      {this.props.hasError &&\n        <Form.Text className=\"text-muted\">\n          {this.props.errorMessage}\n        </Form.Text>\n      }\n      {this.props.isFetching && <Loader/>}\n      {!this.props.isFetching && !this.props.hasError && <ul style={{marginTop: 20}}>{listItems}</ul>}\n      </>\n    );\n  }\n}\n\nQuestionList.propTypes = {\n  isFetching: PropTypes.bool,\n  questions: PropTypes.array,\n  filterBy: PropTypes.string,\n  hasError: PropTypes.bool,\n  errorMessage: PropTypes.string\n}","import {\n  connect\n} from 'react-redux'\nimport QuestionList from '../components/QuestionList';\n\nconst mapStateToProps = (state) => {\n  const isFetching = state.questionsByTag ? state.questionsByTag.isFetching : false\n  const hasError = state.questionsByTag ? state.questionsByTag.hasError : false\n  const errorMessage = state.questionsByTag ? state.questionsByTag.errorMessage : ''\n  var questions, filterBy\n  if (state.questionsByTag.hasOwnProperty('questionsByTags') &&\n    state.questionsByTag.questionsByTags.hasOwnProperty(state.questionsByTag.currentTag)) {\n    questions = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].items\n    filterBy = state.questionsByTag.filterBy\n  }\n\n  return {\n    isFetching,\n    questions,\n    filterBy,\n    hasError,\n    errorMessage\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    //\n  }\n}\n\n\nconst Questions = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionList)\n\nexport default Questions","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap'\n\n\nexport default class FilterTagComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this._handleChange = this._handleChange.bind(this)\n  }\n\n  _handleChange(e) {\n    this.props.filterList(e.target.value);\n  }\n\n  render() {\n      return (\n        <>\n        { this.props.showFilterTag &&\n          <Form>\n            <Form.Group controlId={\"formFilterTagControlId\" + this.props.filterType}>\n              <Form.Label>Filter {this.props.filterType}s:</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Search string\"\n                onChange={this._handleChange}\n              />\n            </Form.Group>\n          </Form>\n        }\n        </>\n      );\n  }\n}\n\nFilterTagComponent.propTypes = {\n  filterList: PropTypes.func,\n  showFilterTag: PropTypes.bool,\n  filterType: PropTypes.string\n};","export const FILTER_QUESTIONS_BY_STRING = 'FILTER_QUESTIONS_BY_STRING'\nexport function filterQuestionsByString(searchString) {\n  return {\n    type: FILTER_QUESTIONS_BY_STRING,\n    searchString\n  }\n}\n\nexport const FILTER_ANSWERS_BY_STRING = 'FILTER_ANSWERS_BY_STRING'\nexport function filterAnswersByString(searchString) {\n  return {\n    type: FILTER_ANSWERS_BY_STRING,\n    searchString\n  }\n}","import fetch from 'cross-fetch'\n\nexport const GET_QUESTION_DETAILS = 'GET_QUESTION_DETAILS'\nfunction getQuestionDetails(questionId) {\n  return {\n    type: GET_QUESTION_DETAILS,\n    questionId\n  }\n}\n\nexport const RECEIVE_QUESTION_DETAILS = 'RECEIVE_QUESTION_DETAILS'\nfunction receiveQuestionDetails(questionId, json) {\n  return {\n    type: RECEIVE_QUESTION_DETAILS,\n    questionId,\n    questionDetails: json,\n    receivedAt: Date.now()\n  }\n}\n\nexport const ERROR_RECEIVING_QUESTION_DETAILS = 'ERROR_RECEIVING_QUESTION_DETAILS'\nexport function errorReceivingQuestionDetails(questionId, errorMessage) {\n  return {\n    type: ERROR_RECEIVING_QUESTION_DETAILS,\n    questionId,\n    errorMessage\n  }\n}\n\nexport const fetchQuestionDetails = function (questionId) {\n  return dispatch => {\n    dispatch(getQuestionDetails(questionId))\n    return fetch(`https://api.stackexchange.com/2.2/questions/${questionId}?order=desc&sort=activity&site=stackoverflow&filter=!51HTqDFxBs5q365jR-o6KJTubZZDbm.9HHcFra`)\n      .then(response => response.json())\n      .then(json => {\n        if ('error_id' in json) {\n          dispatch(errorReceivingQuestionDetails(questionId, json.error_message))\n        } else {\n          dispatch(receiveQuestionDetails(questionId, json))\n        }\n      })\n      .catch(() => dispatch(errorReceivingQuestionDetails(questionId)))\n  }\n}\n","import {\n  connect\n} from 'react-redux'\nimport FilterTagComponent from '../components/FilterTagComponent';\nimport {\n  filterQuestionsByString\n} from '../actions'\n\nconst mapStateToProps = (state) => {\n  var showFilterTag\n  if (state.questionsByTag.hasOwnProperty('questionsByTags') &&\n    state.questionsByTag.questionsByTags.hasOwnProperty(state.questionsByTag.currentTag)) {\n    showFilterTag = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].items.length > 0\n  }\n  return {\n    showFilterTag,\n    filterType: 'Question'\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    filterList: (searchString) => {\n      dispatch(filterQuestionsByString(searchString))\n    }\n  }\n}\n\n\nconst QuestionsFilterTag = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterTagComponent)\n\nexport default QuestionsFilterTag","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap'\nimport SearchTag from '../containers/SearchTag'\nimport Questions from '../containers/Questions';\nimport QuestionsFilterTag from '../containers/QuestionsFilterTag';\n\nfunction HomePage({ match: { params: { tagName } } }) {\n  return (\n    <Container>\n      <h1 style={{marginTop: 20, marginBottom: 30}}>Stackoverflow Basic View</h1>\n      <SearchTag tagName={tagName} />\n      <QuestionsFilterTag />\n      <Questions />\n    </Container>\n  )\n}\n\nHomePage.propTypes = {\n  match: PropTypes.object\n};\n\nexport default HomePage;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card } from 'react-bootstrap'\n\n\nexport default class AnswerDetails extends React.Component {\n\n  createMarkup(markUp) {\n    return {__html: markUp}\n  }\n\n  setBody() {\n    if (this.props.truncateBody) {\n      return this.createMarkup(this.props.body.substring(0, 200).concat('...'))\n    }\n    return this.createMarkup(this.props.body)\n  }\n\n  render() {\n      return (\n        <Card style = {{marginBottom: 20}}>\n          <Card.Body>\n            <Card.Text dangerouslySetInnerHTML={this.setBody()} />\n            <Card.Text >\n              <a href={this.props.link} target={'blank'} style={{ textDecoration: 'none' }}>\n                StackOverflow\n              </a>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      )\n  }\n}\n\nAnswerDetails.propTypes = {\n  link: PropTypes.string,\n  body: PropTypes.string,\n  truncateBody: PropTypes.bool,\n  answerId: PropTypes.number\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap'\nimport AnswerDetails from './AnswerDetails';\n\n\nexport default class AnswerList extends React.Component {\n\n  render() {\n    const answers = this.props.answers;\n    const listItems = answers ? answers.filter((answer) => {\n      if (!this.props.filterBy) return true\n      return answer.body.indexOf(this.props.filterBy) !== -1\n    }).map((answer) =>\n      <AnswerDetails\n        key={answer.answer_id}\n        link={answer.link}\n        body={answer.body}\n        truncateBody={false}\n        answerId={answer.answer_id}\n      />\n    ) : []\n\n    return (\n      <>\n      {answers && answers.length === 0 &&\n        <Form.Text className=\"text-muted\">There are no answers!</Form.Text>\n      }\n      {answers && answers.length !== 0 && listItems.length === 0 &&\n        <Form.Text className=\"text-muted\">No matching answers found!</Form.Text>\n      }\n      {answers && answers.length !== 0 && listItems.length > 0 &&\n        <Form.Text className=\"text-muted\">Found: {listItems.length} matches</Form.Text>\n      }\n      <ul style={{marginTop: 20}}>{listItems}</ul>\n      </>\n    );\n  }\n}\n\nAnswerList.propTypes = {\n  answers: PropTypes.array,\n  filterBy: PropTypes.string\n}","import {\n  connect\n} from 'react-redux'\nimport FilterTagComponent from '../components/FilterTagComponent';\nimport {\n  filterAnswersByString\n} from '../actions'\n\nconst mapStateToProps = (state) => {\n  var showFilterTag\n  if (state.questionsById.hasOwnProperty('questionsByIds') &&\n    state.questionsById.questionsByIds.hasOwnProperty(state.questionsByTag.currentTag) &&\n    state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].hasOwnProperty('items')) {\n    showFilterTag = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].items.length > 0\n  }\n  return {\n    showFilterTag,\n    filterType: 'Answer'\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    filterList: (searchString) => {\n      dispatch(filterAnswersByString(searchString))\n    }\n  }\n}\n\n\nconst AnswersFilterTag = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterTagComponent)\n\nexport default AnswersFilterTag","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container } from 'react-bootstrap'\nimport QuestionDetails from './QuestionDetails'\nimport AnswerList from './AnswerList'\nimport Loader from './Loader';\nimport AnswersFilterTag from '../containers/AnswersFilterTag'\nimport { Form } from 'react-bootstrap'\n\n\nexport default class QuestionPage extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchQuestionData(this.props.questionId)\n  }\n\n  render() {\n    const question = this.props.question\n    return (\n      <Container>\n        <h1 style={{marginTop: 20, marginBottom: 30}}>\n          Stackoverflow Basic View\n        </h1>\n        {this.props.hasError &&\n          <Form.Text className=\"text-muted\">\n            {this.props.errorMessage}\n          </Form.Text>\n        }\n        {this.props.isLoading && <Loader/>}\n        {!this.props.isLoading && !this.props.hasError && question &&\n          <>\n            <QuestionDetails\n              key={question.question_id}\n              questionId={question.question_id}\n              link={question.link}\n              title={question.title}\n              body={question.body}\n              titleAsHeader={true}\n            />\n            <AnswersFilterTag />\n            <AnswerList\n              filterBy={this.props.filterBy}\n              answers={question.answers}\n            />\n          </>\n        }\n      </Container>\n    );\n  }\n}\n\nQuestionPage.propTypes = {\n  isLoading: PropTypes.bool,\n  filterBy: PropTypes.string,\n  questionId: PropTypes.string,\n  question: PropTypes.object,\n  fetchQuestionData: PropTypes.func,\n  hasError: PropTypes.bool,\n  errorMessage: PropTypes.string\n}","import {\n  connect\n} from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport QuestionPage from '../components/QuestionPage'\nimport { fetchQuestionDetails } from '../actions'\n\nconst mapStateToProps = (state, ownProps) => {\n  const questionId = ownProps.match.params.questionId\n  const isFetching = state.questionsById ? state.questionsById.isFetching : false\n  const filterBy = state.questionsById ? state.questionsById.filterBy : ''\n  const hasError = state.questionsById ? state.questionsById.hasError : false\n  const errorMessage = state.questionsById ? state.questionsById.errorMessage : ''\n  var question\n  if (state.questionsById.hasOwnProperty('questionsByIds') &&\n    state.questionsById.questionsByIds.hasOwnProperty(questionId)) {\n    question = state.questionsById.questionsByIds[questionId]\n  }\n  return {\n    isFetching,\n    filterBy,\n    questionId,\n    question,\n    hasError,\n    errorMessage\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuestionData: (questionId) => dispatch(fetchQuestionDetails(questionId))\n  }\n}\n\nconst QuestionPageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionPage)\n\nexport default QuestionPageContainer","import {\n  combineReducers\n} from 'redux'\nimport questionsByTag from './questions'\nimport questionsById from './question'\n\nconst rootReducer = combineReducers({\n  questionsByTag,\n  questionsById\n})\n\nexport default rootReducer","import {\n  GET_QUESTIONS_BY_TAG,\n  RECEIVE_QUESTIONS_BY_TAG,\n  ERROR_RECEIVING_QUESTIONS_BY_TAG,\n  FILTER_QUESTIONS_BY_STRING,\n  UPDATE_SEARCH_VALUE_ON_HOME_PAGE\n} from '../../actions'\n\n\nexport default function questions(\n  state = {\n    currentTag: '',\n    filterBy: '',\n    searchValue: '',\n    isFetching: false,\n    hasError: false,\n    errorMessage: '',\n    questionsByTags: Object.assign({}),\n  },\n  action\n) {\n  switch (action.type) {\n    case ERROR_RECEIVING_QUESTIONS_BY_TAG:\n      return Object.assign({}, state, {\n        hasError: true,\n        isFetching: false,\n        currentTag: action.tag,\n        filterBy: '',\n        errorMessage: action.errorMessage\n      })\n    case GET_QUESTIONS_BY_TAG:\n      return Object.assign({}, state, {\n        isFetching: true,\n        filterBy: '',\n        currentTag: action.tag,\n        hasError: false,\n        errorMessage: ''\n      })\n    case RECEIVE_QUESTIONS_BY_TAG:\n      return Object.assign({}, state, {\n        isFetching: false,\n        hasError: false,\n        errorMessage: '',\n        filterBy: '',\n        currentTag: action.tag,\n        questionsByTags: Object.assign({}, state.questionsByTags, {\n          [action.tag]: action.questions\n        }),\n      })\n    case FILTER_QUESTIONS_BY_STRING:\n      return Object.assign({}, state, {\n        filterBy: action.searchString\n      })\n    case UPDATE_SEARCH_VALUE_ON_HOME_PAGE:\n      return Object.assign({}, state, {\n        searchValue: action.searchValue\n      })\n    default:\n      return state\n  }\n}","import {\n  GET_QUESTION_DETAILS,\n  RECEIVE_QUESTION_DETAILS,\n  ERROR_RECEIVING_QUESTION_DETAILS,\n  FILTER_ANSWERS_BY_STRING\n} from '../../actions'\n\n\nexport default function question(state = {\n  isFetching: false,\n  hasError: false,\n  questionsByIds: {},\n  errorMessage: '',\n  currentQuestionId: '',\n  filterBy: ''\n}, action) {\n  switch (action.type) {\n    case ERROR_RECEIVING_QUESTION_DETAILS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        hasError: true,\n        currentQuestionId: action.questionId,\n        errorMessage: action.errorMessage\n      })\n    case GET_QUESTION_DETAILS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        currentQuestionId: action.questionId,\n        errorMessage: '',\n        hasError: false\n      })\n    case RECEIVE_QUESTION_DETAILS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        currentQuestionId: action.questionId,\n        errorMessage: '',\n        hasError: false,\n        questionsByIds: Object.assign({}, state.questionsByIds, {\n          [action.questionId]: action.questionDetails.items[0]\n        }),\n      })\n    case FILTER_ANSWERS_BY_STRING:\n      return Object.assign({}, state, {\n        filterBy: action.searchString\n      })\n    default:\n      return state\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport HomePage from './components/HomePage'\nimport QuestionPageContainer from './containers/QuestionPageContainer';\nimport configureStore from './store/store'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={'/stackoverflow-basic-webapp'}>\n      <Route exact path={`${process.env.PUBLIC_URL}/:tagName?`} component={HomePage} />\n      <Route path={`${process.env.PUBLIC_URL}/question/:questionId`} component={QuestionPageContainer} />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// import { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\nimport {\n  composeWithDevTools\n} from 'redux-devtools-extension'\nimport {\n  applyMiddleware,\n  createStore\n} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n// const loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [\n    // loggerMiddleware,\n    thunkMiddleware\n  ]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store\n}"],"sourceRoot":""}