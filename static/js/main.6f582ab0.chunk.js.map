{"version":3,"sources":["components/SearchTagComponent.js","actions/search.js","containers/SearchTag.js","components/QuestionDetails.js","components/Loader.js","components/QuestionList.js","containers/Questions.js","components/FilterTagComponent.js","actions/filter.js","actions/question.js","containers/QuestionsFilterTag.js","components/Header.js","components/HomePage.js","components/AnswerDetails.js","components/AnswerList.js","containers/AnswersFilterTag.js","components/QuestionPage.js","containers/QuestionPageContainer.js","store/reducers/index.js","store/reducers/questions.js","store/reducers/question.js","serviceWorker.js","index.js","store/store.js"],"names":["SearchTagComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchInput","urlTagName","_handleKeyDown","bind","assertThisInitialized","_handleChange","state","searchValue","fetchQuestions","prevProps","setState","e","key","preventDefault","history","push","target","value","react_default","a","createElement","Fragment","hasError","Form","Text","className","errorMessage","Group","controlId","Label","Control","type","placeholder","defaultValue","onKeyDown","onChange","undefined","availableQuota","totalQuota","React","Component","GET_QUESTIONS_BY_TAG","RECEIVE_QUESTIONS_BY_TAG","ERROR_RECEIVING_QUESTIONS_BY_TAG","errorReceivingQuestionsByTag","tag","UPDATE_SEARCH_VALUE_ON_HOME_PAGE","fetchQuestionsByTag","dispatch","getQuestionsByTag","fetch","concat","then","response","json","error_message","questions","receivedAt","Date","now","receiveQuestionsByTag","catch","SearchTag","withRouter","connect","ownProps","questionsByTag","hasOwnProperty","questionsByTags","currentTag","quota_remaining","quota_max","tagName","updateSearchValue","QuestionDetails","markUp","__html","truncateBody","createMarkup","body","substring","titleHasLink","react_router_dom","to","questionId","style","textDecoration","color","Card","Header","Title","dangerouslySetInnerHTML","title","tags","map","Badge","pill","variant","marginRight","marginBottom","border","borderColor","Body","setBody","href","link","ListGroup","ListGroupItem","isAnswered","Button","answerCount","score","upvotes","downvotes","listTags","Loader","LoadingOverlay_default","active","spinner","PacmanLoader_default","QuestionList","listItems","filter","question","filterBy","indexOf","index","QuestionDetails_QuestionDetails","question_id","is_answered","answer_count","up_vote_count","down_vote_count","length","isFetching","Loader_Loader","marginTop","Questions","items","FilterTagComponent","filterList","showFilterTag","filterType","FILTER_QUESTIONS_BY_STRING","FILTER_ANSWERS_BY_STRING","GET_QUESTION_DETAILS","RECEIVE_QUESTION_DETAILS","ERROR_RECEIVING_QUESTION_DETAILS","errorReceivingQuestionDetails","fetchQuestionDetails","getQuestionDetails","questionDetails","receiveQuestionDetails","QuestionsFilterTag","searchString","filterQuestionsByString","HomePage","_ref","match","params","Container","Header_Header","containers_SearchTag","containers_QuestionsFilterTag","containers_Questions","AnswerDetails","isAccepted","AnswerList","answers","answer","AnswerDetails_AnswerDetails","answer_id","answerId","is_accepted","AnswersFilterTag","questionsById","questionsByIds","currentQuestionId","filterAnswersByString","QuestionPage","fetchQuestionData","containers_AnswersFilterTag","AnswerList_AnswerList","QuestionPageContainer","rootReducer","combineReducers","arguments","assign","action","defineProperty","Boolean","window","location","hostname","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f582ab0.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'react-bootstrap'\n\n\nexport default class SearchTagComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.searchInput = props.urlTagName\n    this._handleKeyDown = this._handleKeyDown.bind(this)\n    this._handleChange = this._handleChange.bind(this)\n    this.state = {\n      searchValue: this.searchInput\n    }\n  }\n\n  componentDidMount() {\n    if (this.searchInput) {\n      this.props.fetchQuestions(this.searchInput)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.urlTagName !== this.props.urlTagName) {\n      this.props.fetchQuestions(this.props.urlTagName)\n      this.setState({searchValue: this.props.urlTagName})\n    }\n  }\n\n  _handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault()\n      if (this.searchInput) {\n        this.props.fetchQuestions(this.searchInput)\n        this.props.history.push('/' + this.searchInput)\n      }\n\n    }\n  }\n\n  _handleChange(e) {\n    this.searchInput = e.target.value;\n    this.setState({searchValue: this.searchInput})\n  }\n\n  render() {\n      return (\n        <>\n        {this.props.hasError &&\n          <Form.Text className=\"text-muted\">\n            {this.props.errorMessage}\n          </Form.Text>\n        }\n        {!this.props.hasError &&\n          <Form>\n            <Form.Group controlId=\"formSearchTagControlId\">\n              <Form.Label>Search Trending problems by tag:</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Tag name\"\n                defaultValue={this.searchInput}\n                onKeyDown={this._handleKeyDown}\n                onChange={this._handleChange}\n                value={this.state.searchValue}\n              />\n              <Form.Text className=\"text-muted\">\n                {this.props.availableQuota !== undefined &&\n                  \"Free Search Quota used: \"+ this.props.availableQuota +  \"/\" + this.props.totalQuota\n                }\n              </Form.Text>\n            </Form.Group>\n          </Form>\n        }\n        </>\n      );\n  }\n}\n\nSearchTagComponent.propTypes = {\n  fetchQuestions: PropTypes.func,\n  availableQuota: PropTypes.number,\n  totalQuota: PropTypes.number,\n  urlTagName: PropTypes.string,\n  history: PropTypes.object,\n  hasError: PropTypes.bool,\n  errorMessage: PropTypes.string\n};","import fetch from 'cross-fetch'\n\nexport const GET_QUESTIONS_BY_TAG = 'GET_QUESTIONS_BY_TAG'\nfunction getQuestionsByTag(tag) {\n  return {\n    type: GET_QUESTIONS_BY_TAG,\n    tag\n  }\n}\n\nexport const RECEIVE_QUESTIONS_BY_TAG = 'RECEIVE_QUESTIONS_BY_TAG'\nfunction receiveQuestionsByTag(tag, json) {\n  return {\n    type: RECEIVE_QUESTIONS_BY_TAG,\n    tag,\n    questions: json,\n    receivedAt: Date.now()\n  }\n}\n\nexport const ERROR_RECEIVING_QUESTIONS_BY_TAG = 'ERROR_RECEIVING_QUESTIONS_BY_TAG'\nexport function errorReceivingQuestionsByTag(tag, errorMessage) {\n  return {\n    type: ERROR_RECEIVING_QUESTIONS_BY_TAG,\n    tag,\n    errorMessage\n  }\n}\n\nexport const UPDATE_SEARCH_VALUE_ON_HOME_PAGE = 'UPDATE_SEARCH_VALUE_ON_HOME_PAGE'\nexport function updateSearchValueOnHomePage(searchValue) {\n  return {\n    type: UPDATE_SEARCH_VALUE_ON_HOME_PAGE,\n    searchValue\n  }\n}\n\nexport const fetchQuestionsByTag = function (tag) {\n  return dispatch => {\n    dispatch(getQuestionsByTag(tag))\n    return fetch(`https://api.stackexchange.com/2.2/tags/${tag}/faq?site=stackoverflow&filter=!0WJ3X8Z2siA7(ExeUINqXJd0*`)\n      .then(response => response.json())\n      .then(json => {\n        if ('error_id' in json) {\n          dispatch(errorReceivingQuestionsByTag(tag, json.error_message))\n        } else {\n          dispatch(receiveQuestionsByTag(tag, json))\n        }\n      })\n      .catch(() => dispatch(errorReceivingQuestionsByTag(tag)))\n  }\n}\n","import {\n  connect\n} from 'react-redux'\nimport SearchTagComponent from '../components/SearchTagComponent';\nimport {\n  fetchQuestionsByTag, updateSearchValueOnHomePage\n} from '../actions/search'\nimport { withRouter } from \"react-router\"\n\nconst mapStateToProps = (state, ownProps) => {\n  const urlTagName = ownProps.urlTagName\n  const searchValue = state.questionsByTag ? state.questionsByTag.searchValue : ''\n  var availableQuota, totalQuota\n  if (state.questionsByTag.hasOwnProperty('questionsByTags') &&\n    state.questionsByTag.questionsByTags.hasOwnProperty(state.questionsByTag.currentTag)) {\n    availableQuota = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].quota_remaining\n    totalQuota = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].quota_max\n  }\n\n  return {\n    availableQuota,\n    totalQuota,\n    urlTagName,\n    searchValue\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuestions: (tagName) => {\n      dispatch(fetchQuestionsByTag(tagName))\n    },\n    updateSearchValue: (value) => {\n      dispatch(updateSearchValueOnHomePage(value))\n    }\n  }\n}\n\n\nconst SearchTag = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchTagComponent))\n\nexport default SearchTag","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Badge, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\n\nexport default class QuestionDetails extends React.Component {\n\n  createMarkup(markUp) {\n    return {__html: markUp}\n  }\n\n  setBody() {\n    if (this.props.truncateBody) {\n      return this.createMarkup(this.props.body.substring(0, 200).concat('...'))\n    }\n    return this.createMarkup(this.props.body)\n  }\n\n  title() {\n    if (this.props.titleHasLink) {\n      return (\n        <NavLink to={`/question/` + this.props.questionId} style={{ textDecoration: 'none', color: 'black' }}>\n          <Card.Header>\n            <Card.Title\n              dangerouslySetInnerHTML={this.createMarkup(this.props.title)} />\n          </Card.Header>\n        </NavLink>\n      )\n    }\n    return (\n      <Card.Header>\n        <Card.Title\n          dangerouslySetInnerHTML={this.createMarkup(this.props.title)} />\n      </Card.Header>\n    )\n  }\n\n  listTags() {\n    return this.props.tags.map((tag) => {\n      return (\n        <NavLink key={tag} to={`/` + tag} style={{ textDecoration: 'none' }}>\n          <Badge pill variant=\"secondary\" style={{ marginRight: 5 }}>{tag}</Badge>\n        </NavLink>\n      )\n    })\n  }\n\n  render() {\n      return (\n        <Card style = {{marginBottom: 20}} border={this.props.borderColor}>\n          {this.title()}\n          <Card.Body>\n            <Card.Text dangerouslySetInnerHTML={this.setBody()} />\n            <Card.Text >\n              <a href={this.props.link} target={'blank'} style={{ textDecoration: 'none' }}>\n                StackOverflow\n              </a>\n            </Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>\n              {this.props.isAnswered &&\n                <Button variant=\"success\" style={{ marginRight: 5 }}>\n                  Answered\n                  <span className=\"sr-only\">Accepted Answer</span>\n                </Button>\n              }\n              {this.props.answerCount !== undefined &&\n                <Button variant=\"light\" style={{ marginRight: 5 }}>\n                  Answers <Badge variant=\"dark\">{this.props.answerCount}</Badge>\n                  <span className=\"sr-only\">Answer Count</span>\n                </Button>\n              }\n              {this.props.score !== undefined &&\n                <Button variant=\"info\" style={{ marginRight: 5 }}>\n                  Score <Badge variant=\"light\">{this.props.score}</Badge>\n                  <span className=\"sr-only\">Answer Score</span>\n                </Button>\n              }\n              {this.props.upvotes !== undefined &&\n                <Button variant=\"dark\" style={{ marginRight: 5 }}>\n                  Upvotes <Badge variant=\"light\">{this.props.upvotes}</Badge>\n                  <span className=\"sr-only\">Number of Upvotes</span>\n                </Button>\n              }\n              {this.props.downvotes !== undefined &&\n                <Button variant=\"secondary\" style={{ marginRight: 5 }}>\n                  DownVotes <Badge variant=\"light\">{this.props.downvotes}</Badge>\n                  <span className=\"sr-only\">Number of DownVotes</span>\n                </Button>\n              }\n            </ListGroupItem>\n            <ListGroupItem>\n            {this.listTags()}\n            </ListGroupItem>\n          </ListGroup>\n        </Card>\n      )\n  }\n}\n\nQuestionDetails.propTypes = {\n  link: PropTypes.string,\n  title: PropTypes.string,\n  body: PropTypes.string,\n  truncateBody: PropTypes.bool,\n  titleHasLink: PropTypes.bool,\n  titleAsHeader: PropTypes.bool,\n  questionId: PropTypes.number,\n  tags: PropTypes.array,\n  isAnswered: PropTypes.bool,\n  answerCount: PropTypes.number,\n  score: PropTypes.number,\n  upvotes: PropTypes.number,\n  downvotes: PropTypes.number,\n  borderColor: PropTypes.string\n}","import React from 'react'\nimport LoadingOverlay from 'react-loading-overlay'\nimport PacmanLoader from 'react-spinners/PacmanLoader'\n\nexport default class Loader extends React.Component {\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={true}\n        spinner={<PacmanLoader color={'#36D7B7'} />}\n      />\n    )\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap'\nimport QuestionDetails from './QuestionDetails'\nimport Loader from './Loader';\n\n\nexport default class QuestionList extends React.Component {\n\n  render() {\n    const questions = this.props.questions;\n    const listItems = questions ? questions.filter((question) => {\n      if (!this.props.filterBy) return true\n      return question.title.indexOf(this.props.filterBy) !== -1\n        || question.body.indexOf(this.props.filterBy) !== -1\n    }).map((question, index) =>\n      <QuestionDetails\n        key={question.question_id}\n        link={question.link}\n        title={question.title}\n        body={question.body}\n        truncateBody={true}\n        titleHasLink={true}\n        questionId={question.question_id}\n        tags={question.tags}\n        isAnswered={question.is_answered}\n        answerCount={question.answer_count}\n        score={question.score}\n        upvotes={question.up_vote_count}\n        downvotes={question.down_vote_count}\n        borderColor={index%2===0 ? 'warning' : 'info' }\n      />\n    ) : []\n    return (\n      <>\n      {questions && questions.length === 0 &&\n        <Form.Text className=\"text-muted\">No questions found for the given Tag!</Form.Text>\n      }\n      {questions && questions.length !== 0 && listItems.length === 0 &&\n        <Form.Text className=\"text-muted\">No matching questions found!</Form.Text>\n      }\n      {questions && questions.length !== 0 && listItems.length > 0 &&\n        <Form.Text className=\"text-muted\">Found: {listItems.length} matches</Form.Text>\n      }\n      {this.props.hasError &&\n        <Form.Text className=\"text-muted\">\n          {this.props.errorMessage}\n        </Form.Text>\n      }\n      {this.props.isFetching && <Loader/>}\n      {!this.props.isFetching && !this.props.hasError && <ul style={{marginTop: 20}}>{listItems}</ul>}\n      </>\n    );\n  }\n}\n\nQuestionList.propTypes = {\n  isFetching: PropTypes.bool,\n  questions: PropTypes.array,\n  filterBy: PropTypes.string,\n  hasError: PropTypes.bool,\n  errorMessage: PropTypes.string\n}","import {\n  connect\n} from 'react-redux'\nimport QuestionList from '../components/QuestionList';\n\nconst mapStateToProps = (state) => {\n  const isFetching = state.questionsByTag ? state.questionsByTag.isFetching : false\n  const hasError = state.questionsByTag ? state.questionsByTag.hasError : false\n  const errorMessage = state.questionsByTag ? state.questionsByTag.errorMessage : ''\n  var questions, filterBy\n  if (state.questionsByTag.hasOwnProperty('questionsByTags') &&\n    state.questionsByTag.questionsByTags.hasOwnProperty(state.questionsByTag.currentTag)) {\n    questions = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].items\n    filterBy = state.questionsByTag.filterBy\n  }\n\n  return {\n    isFetching,\n    questions,\n    filterBy,\n    hasError,\n    errorMessage\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n    //\n  }\n}\n\n\nconst Questions = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionList)\n\nexport default Questions","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap'\n\n\nexport default class FilterTagComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this._handleChange = this._handleChange.bind(this)\n  }\n\n  _handleChange(e) {\n    this.props.filterList(e.target.value);\n  }\n\n  render() {\n      return (\n        <>\n        { this.props.showFilterTag &&\n          <Form>\n            <Form.Group controlId={\"formFilterTagControlId\" + this.props.filterType}>\n              <Form.Label>Filter {this.props.filterType}s:</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Search string\"\n                onChange={this._handleChange}\n              />\n            </Form.Group>\n          </Form>\n        }\n        </>\n      );\n  }\n}\n\nFilterTagComponent.propTypes = {\n  filterList: PropTypes.func,\n  showFilterTag: PropTypes.bool,\n  filterType: PropTypes.string\n};","export const FILTER_QUESTIONS_BY_STRING = 'FILTER_QUESTIONS_BY_STRING'\nexport function filterQuestionsByString(searchString) {\n  return {\n    type: FILTER_QUESTIONS_BY_STRING,\n    searchString\n  }\n}\n\nexport const FILTER_ANSWERS_BY_STRING = 'FILTER_ANSWERS_BY_STRING'\nexport function filterAnswersByString(searchString) {\n  return {\n    type: FILTER_ANSWERS_BY_STRING,\n    searchString\n  }\n}","import fetch from 'cross-fetch'\n\nexport const GET_QUESTION_DETAILS = 'GET_QUESTION_DETAILS'\nfunction getQuestionDetails(questionId) {\n  return {\n    type: GET_QUESTION_DETAILS,\n    questionId\n  }\n}\n\nexport const RECEIVE_QUESTION_DETAILS = 'RECEIVE_QUESTION_DETAILS'\nfunction receiveQuestionDetails(questionId, json) {\n  return {\n    type: RECEIVE_QUESTION_DETAILS,\n    questionId,\n    questionDetails: json,\n    receivedAt: Date.now()\n  }\n}\n\nexport const ERROR_RECEIVING_QUESTION_DETAILS = 'ERROR_RECEIVING_QUESTION_DETAILS'\nexport function errorReceivingQuestionDetails(questionId, errorMessage) {\n  return {\n    type: ERROR_RECEIVING_QUESTION_DETAILS,\n    questionId,\n    errorMessage\n  }\n}\n\nexport const fetchQuestionDetails = function (questionId) {\n  return dispatch => {\n    dispatch(getQuestionDetails(questionId))\n    return fetch(`https://api.stackexchange.com/2.2/questions/${questionId}?order=desc&sort=activity&site=stackoverflow&filter=!51HTqDFxBs5q365jR-o6KJTubZZDbm.9HHcFra`)\n      .then(response => response.json())\n      .then(json => {\n        if ('error_id' in json) {\n          dispatch(errorReceivingQuestionDetails(questionId, json.error_message))\n        } else {\n          dispatch(receiveQuestionDetails(questionId, json))\n        }\n      })\n      .catch(() => dispatch(errorReceivingQuestionDetails(questionId)))\n  }\n}\n","import {\n  connect\n} from 'react-redux'\nimport FilterTagComponent from '../components/FilterTagComponent';\nimport {\n  filterQuestionsByString\n} from '../actions'\n\nconst mapStateToProps = (state) => {\n  var showFilterTag\n  if (state.questionsByTag.hasOwnProperty('questionsByTags') &&\n    state.questionsByTag.questionsByTags.hasOwnProperty(state.questionsByTag.currentTag)) {\n    showFilterTag = state.questionsByTag.questionsByTags[state.questionsByTag.currentTag].items.length > 0\n  }\n  return {\n    showFilterTag,\n    filterType: 'Question'\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    filterList: (searchString) => {\n      dispatch(filterQuestionsByString(searchString))\n    }\n  }\n}\n\n\nconst QuestionsFilterTag = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterTagComponent)\n\nexport default QuestionsFilterTag","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <NavLink to={'/'} style={{ textDecoration: 'none', color: 'black' }}>\n        <h1 style={{marginTop: 20, marginBottom: 30}}>\n            Stackoverflow Basic View\n        </h1>\n      </NavLink>\n    )\n  }\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap'\nimport SearchTag from '../containers/SearchTag'\nimport Questions from '../containers/Questions';\nimport QuestionsFilterTag from '../containers/QuestionsFilterTag';\nimport Header from './Header';\n\nfunction HomePage({ match: { params: { tagName } } }) {\n  return (\n    <Container>\n      <Header />\n      <SearchTag urlTagName={tagName} />\n      <QuestionsFilterTag />\n      <Questions />\n    </Container>\n  )\n}\n\nHomePage.propTypes = {\n  match: PropTypes.object\n};\n\nexport default HomePage;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, ListGroup, ListGroupItem, Badge, Button } from 'react-bootstrap'\n\n\nexport default class AnswerDetails extends React.Component {\n\n  createMarkup(markUp) {\n    return {__html: markUp}\n  }\n\n  setBody() {\n    if (this.props.truncateBody) {\n      return this.createMarkup(this.props.body.substring(0, 200).concat('...'))\n    }\n    return this.createMarkup(this.props.body)\n  }\n\n  render() {\n      return (\n        <Card style = {{marginBottom: 20}} border={this.props.borderColor}>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>\n              {this.props.isAccepted &&\n                <Button variant=\"success\" style={{ marginRight: 5 }}>\n                  Accepted\n                  <span className=\"sr-only\">Accepted Answer</span>\n                </Button>\n              }\n              {this.props.score !== undefined &&\n                <Button variant=\"info\" style={{ marginRight: 5 }}>\n                  Score <Badge variant=\"light\">{this.props.score}</Badge>\n                  <span className=\"sr-only\">Answer Score</span>\n                </Button>\n              }\n              {this.props.upvotes !== undefined &&\n                <Button variant=\"dark\" style={{ marginRight: 5 }}>\n                  Upvotes <Badge variant=\"light\">{this.props.upvotes}</Badge>\n                  <span className=\"sr-only\">Number of Upvotes</span>\n                </Button>\n              }\n              {this.props.downvotes !== undefined &&\n                <Button variant=\"secondary\" style={{ marginRight: 5 }}>\n                  DownVotes <Badge variant=\"light\">{this.props.downvotes}</Badge>\n                  <span className=\"sr-only\">Number of DownVotes</span>\n                </Button>\n              }\n            </ListGroupItem>\n          </ListGroup>\n          <Card.Body>\n            <Card.Text dangerouslySetInnerHTML={this.setBody()} />\n            <Card.Text >\n              <a href={this.props.link} target={'blank'} style={{ textDecoration: 'none' }}>\n                StackOverflow\n              </a>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      )\n  }\n}\n\nAnswerDetails.propTypes = {\n  link: PropTypes.string,\n  body: PropTypes.string,\n  truncateBody: PropTypes.bool,\n  answerId: PropTypes.number,\n  borderColor: PropTypes.string,\n  isAccepted: PropTypes.bool,\n  score: PropTypes.number,\n  upvotes: PropTypes.number,\n  downvotes: PropTypes.number\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap'\nimport AnswerDetails from './AnswerDetails';\n\n\nexport default class AnswerList extends React.Component {\n\n  render() {\n    const answers = this.props.answers;\n    const listItems = answers ? answers.filter((answer) => {\n      if (!this.props.filterBy) return true\n      return answer.body.indexOf(this.props.filterBy) !== -1\n    }).map((answer, index) =>\n      <AnswerDetails\n        key={answer.answer_id}\n        link={answer.link}\n        body={answer.body}\n        truncateBody={false}\n        answerId={answer.answer_id}\n        isAccepted={answer.is_accepted}\n        score={answer.score}\n        upvotes={answer.up_vote_count}\n        downvotes={answer.down_vote_count}\n        borderColor={index%2===0 ? 'warning' : 'info' }\n      />\n    ) : []\n\n    return (\n      <>\n      {answers && answers.length === 0 &&\n        <Form.Text className=\"text-muted\">There are no answers!</Form.Text>\n      }\n      {answers && answers.length !== 0 && listItems.length === 0 &&\n        <Form.Text className=\"text-muted\">No matching answers found!</Form.Text>\n      }\n      {answers && answers.length !== 0 && listItems.length > 0 &&\n        <Form.Text className=\"text-muted\">Found: {listItems.length} matches</Form.Text>\n      }\n      <ul style={{marginTop: 20}}>{listItems}</ul>\n      </>\n    );\n  }\n}\n\nAnswerList.propTypes = {\n  answers: PropTypes.array,\n  filterBy: PropTypes.string\n}","import {\n  connect\n} from 'react-redux'\nimport FilterTagComponent from '../components/FilterTagComponent';\nimport {\n  filterAnswersByString\n} from '../actions'\n\nconst mapStateToProps = (state) => {\n  var showFilterTag\n  if (state.questionsById.hasOwnProperty('questionsByIds') &&\n    state.questionsById.questionsByIds.hasOwnProperty(state.questionsById.currentQuestionId) &&\n    state.questionsById.questionsByIds[state.questionsById.currentQuestionId].hasOwnProperty('answers')) {\n    showFilterTag = state.questionsById.questionsByIds[state.questionsById.currentQuestionId].answers.length > 0\n  }\n  return {\n    showFilterTag,\n    filterType: 'Answer'\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    filterList: (searchString) => {\n      dispatch(filterAnswersByString(searchString))\n    }\n  }\n}\n\n\nconst AnswersFilterTag = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterTagComponent)\n\nexport default AnswersFilterTag","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container } from 'react-bootstrap'\nimport QuestionDetails from './QuestionDetails'\nimport AnswerList from './AnswerList'\nimport Loader from './Loader';\nimport AnswersFilterTag from '../containers/AnswersFilterTag'\nimport { Form } from 'react-bootstrap'\nimport Header from './Header';\n\n\nexport default class QuestionPage extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchQuestionData(this.props.questionId)\n  }\n\n  render() {\n    const question = this.props.question\n    return (\n      <Container>\n        <Header />\n        {this.props.hasError &&\n          <Form.Text className=\"text-muted\">\n            {this.props.errorMessage}\n          </Form.Text>\n        }\n        {this.props.isFetching && <Loader/>}\n        {!this.props.isFetching && !this.props.hasError && question &&\n          <>\n            <QuestionDetails\n              key={question.question_id}\n              questionId={question.question_id}\n              link={question.link}\n              title={question.title}\n              body={question.body}\n              tags={question.tags}\n              isAnswered={question.is_answered}\n              answerCount={question.answer_count}\n              score={question.score}\n              upvotes={question.up_vote_count}\n              downvotes={question.down_vote_count}\n            />\n            <AnswersFilterTag />\n            <AnswerList\n              filterBy={this.props.filterBy}\n              answers={question.answers}\n            />\n          </>\n        }\n      </Container>\n    );\n  }\n}\n\nQuestionPage.propTypes = {\n  isFetching: PropTypes.bool,\n  filterBy: PropTypes.string,\n  questionId: PropTypes.string,\n  question: PropTypes.object,\n  fetchQuestionData: PropTypes.func,\n  hasError: PropTypes.bool,\n  errorMessage: PropTypes.string\n}","import {\n  connect\n} from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport QuestionPage from '../components/QuestionPage'\nimport { fetchQuestionDetails } from '../actions'\n\nconst mapStateToProps = (state, ownProps) => {\n  const questionId = ownProps.match.params.questionId\n  const isFetching = state.questionsById ? state.questionsById.isFetching : false\n  const filterBy = state.questionsById ? state.questionsById.filterBy : ''\n  const hasError = state.questionsById ? state.questionsById.hasError : false\n  const errorMessage = state.questionsById ? state.questionsById.errorMessage : ''\n  var question\n  if (state.questionsById.hasOwnProperty('questionsByIds') &&\n    state.questionsById.questionsByIds.hasOwnProperty(questionId)) {\n    question = state.questionsById.questionsByIds[questionId]\n  }\n  return {\n    isFetching,\n    filterBy,\n    questionId,\n    question,\n    hasError,\n    errorMessage\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuestionData: (questionId) => dispatch(fetchQuestionDetails(questionId))\n  }\n}\n\nconst QuestionPageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionPage)\n\nexport default QuestionPageContainer","import {\n  combineReducers\n} from 'redux'\nimport questionsByTag from './questions'\nimport questionsById from './question'\n\nconst rootReducer = combineReducers({\n  questionsByTag,\n  questionsById\n})\n\nexport default rootReducer","import {\n  GET_QUESTIONS_BY_TAG,\n  RECEIVE_QUESTIONS_BY_TAG,\n  ERROR_RECEIVING_QUESTIONS_BY_TAG,\n  FILTER_QUESTIONS_BY_STRING,\n  UPDATE_SEARCH_VALUE_ON_HOME_PAGE\n} from '../../actions'\n\n\nexport default function questions(\n  state = {\n    currentTag: '',\n    filterBy: '',\n    searchValue: '',\n    isFetching: false,\n    hasError: false,\n    errorMessage: '',\n    questionsByTags: Object.assign({}),\n  },\n  action\n) {\n  switch (action.type) {\n    case ERROR_RECEIVING_QUESTIONS_BY_TAG:\n      return Object.assign({}, state, {\n        hasError: true,\n        isFetching: false,\n        currentTag: action.tag,\n        filterBy: '',\n        errorMessage: action.errorMessage\n      })\n    case GET_QUESTIONS_BY_TAG:\n      return Object.assign({}, state, {\n        isFetching: true,\n        filterBy: '',\n        currentTag: action.tag,\n        hasError: false,\n        errorMessage: ''\n      })\n    case RECEIVE_QUESTIONS_BY_TAG:\n      return Object.assign({}, state, {\n        isFetching: false,\n        hasError: false,\n        errorMessage: '',\n        filterBy: '',\n        currentTag: action.tag,\n        questionsByTags: Object.assign({}, state.questionsByTags, {\n          [action.tag]: action.questions\n        }),\n      })\n    case FILTER_QUESTIONS_BY_STRING:\n      return Object.assign({}, state, {\n        filterBy: action.searchString\n      })\n    case UPDATE_SEARCH_VALUE_ON_HOME_PAGE:\n      return Object.assign({}, state, {\n        searchValue: action.searchValue\n      })\n    default:\n      return state\n  }\n}","import {\n  GET_QUESTION_DETAILS,\n  RECEIVE_QUESTION_DETAILS,\n  ERROR_RECEIVING_QUESTION_DETAILS,\n  FILTER_ANSWERS_BY_STRING\n} from '../../actions'\n\n\nexport default function question(state = {\n  isFetching: false,\n  hasError: false,\n  questionsByIds: {},\n  errorMessage: '',\n  currentQuestionId: '',\n  filterBy: ''\n}, action) {\n  switch (action.type) {\n    case ERROR_RECEIVING_QUESTION_DETAILS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        hasError: true,\n        currentQuestionId: action.questionId,\n        errorMessage: action.errorMessage\n      })\n    case GET_QUESTION_DETAILS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        currentQuestionId: action.questionId,\n        errorMessage: '',\n        hasError: false\n      })\n    case RECEIVE_QUESTION_DETAILS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        currentQuestionId: action.questionId,\n        errorMessage: '',\n        hasError: false,\n        questionsByIds: Object.assign({}, state.questionsByIds, {\n          [action.questionId]: action.questionDetails.items[0]\n        }),\n      })\n    case FILTER_ANSWERS_BY_STRING:\n      return Object.assign({}, state, {\n        filterBy: action.searchString\n      })\n    default:\n      return state\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport HomePage from './components/HomePage'\nimport QuestionPageContainer from './containers/QuestionPageContainer';\nimport configureStore from './store/store'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router >\n      <Route exact path={`/:tagName?`} component={HomePage} />\n      <Route path={`/question/:questionId`} component={QuestionPageContainer} />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// import { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\nimport {\n  composeWithDevTools\n} from 'redux-devtools-extension'\nimport {\n  applyMiddleware,\n  createStore\n} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n// const loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [\n    // loggerMiddleware,\n    thunkMiddleware\n  ]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store\n}"],"sourceRoot":""}